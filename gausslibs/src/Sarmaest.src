/* 
**
**
**
**
*/ 


PROC (1) = sarmallik(par);

LOCAL alpha,beta,phi,theta,n,m,g,F,H,c,z,e,v,P,gamm,zwi,t,yt,ll,s,D,y,von ;
  
  y = _y_;
  
  alpha = 0;
  phi=0;
  beta = 0;
  theta = 0;
  
 IF _p_ ;   
  alpha = ZEROS(_p_,1);
  alpha[_pindex_] = par[1:_pnumb_ ];  
 ENDIF;
 IF _ps_; 
   phi = ZEROS(_ps_*_s_,1);
   von = 1+_pnumb_ ;
   phi[_psindex_*_s_] = par[SEQA(von,1,_psnumb_ )];  
 ENDIF;
 IF _q_;
   beta = ZEROS(_q_,1);
   von = 1+_pnumb_ +_psnumb_ ;
   beta[_qindex_] = par[SEQA(von,1,_qnumb_ )];
 ENDIF;
 IF _qs_;
   theta = ZEROS(_qs_*_s_,1);
   von = 1+_pnumb_ +_psnumb_ +_qnumb_ ;
   theta[_qsindex_*_s_] = par[SEQA(von,1,_qsnumb_ )];
 ENDIF;
 alpha = gesamt(alpha,phi);
 beta = gesamt(beta,theta);
 m = MAXC(ROWS(alpha)|(ROWS(beta)+1));    @  2.3    @                     
 alpha = take(alpha|ZEROS(m,1),m);
 beta = take(beta|ZEROS(m,1),m);
     
 
 n = ROWS(y);


 g =  (1|-beta)/LOWMAT(TOEPLITZ(1|-alpha));                      @  2.13   @ 
 F = (ZEROS(ROWS(alpha)-1,1)~EYE(ROWS(alpha)-1))|REV(alpha)';    @  2.15   @ 
 H = 1~ZEROS(1,m-1); 
 
 c = acovth(alpha,beta,1,m);
 
/*  - - - Initialisierung - - -*/
 
 z = ZEROS(ROWS(F),1);
 e = MISS(ONES(n,1),1);
 v = MISS(ONES(n,1),1);
 
 P = SHIFTR(RESHAPE(c[1:m],m,m),SEQA(0,1,m),0);       @   4.12   @                                              
 gamm = RESHAPE(g[1:m-1],m-1,m-1);                    
 zwi =  LOWMAT(gamm)*SHIFTR(gamm,-SEQA(0,1,m-1),0);
 P[1:m-1,1:m-1] = P[1:m-1,1:m-1] - zwi - zwi[m-1:1,m-1:1] + DIAG(zwi);

 /*  --  Iteration  --  */

 t = 0;
 DO WHILE t < n;
 
   t = t+1;
   z = F*z;                                @  3.1  @ 
   P = F*P*F' + g[1:m]*g[1:m]';            @  3.2  @
   yt = z[1];                              @  3.3  @
   
   IF NOT SCALMISS(y[t]);
    v[t] = P[1,1]  ;                        @  3.10 @ 
    D = P[.,1]/V[t];                        @  3.5  @
    z = z + D*(y[t]-yt);                    @  3.4  @
    P = P-D*H*P;                            @  3.7  @
   ENDIF;
   
   e[t] = y[t]-yt;                          @  3.8  @  
 ENDO;
   v = PACKR(v);
   e = PACKR(e);

 ll = SUMC(LN(v)) + n*LN(SUMC((e^2)./v));      @ 3.15  @
 
 _s2_ = MEANC((e^2)./v);                       @ 3.14  @

  RETP(ll);  
ENDP;
  
PROC (3) = sarmaest(y,p_index,ps_index,q_index,qs_index,s,par0);
 
 LOCAL alpha,beta,g,H,it,ll,n,par,parindex,s2;
 LOCAL ar_index,ma_index,phi,theta,z1,cov,par1,par2,e,stdpar,sigma2;
 
 _pindex_ = p_index;
 _psindex_ = ps_index;
 _qindex_ = q_index;
 _qsindex_ = qs_index;
 _p_ = MAXC(p_index);
 _pnumb_  = ROWS(p_index)*(_p_>0); 
 _ps_ = MAXC(ps_index);
 _psnumb_  = ROWS(ps_index)*(_ps_>0);
 _q_ = MAXC(q_index);
 _qnumb_  = ROWS(q_index)*(_q_>0);
 _qs_ = MAXC(qs_index); 
 _qsnumb_  = ROWS(qs_index)*(_qs_>0);
  _y_= y - tsmean(y);
  _s_ = s;
  n = ROWS(y);
   
  IF (_p_ >= s) AND (_ps_ > 0); 
    PRINT "Order of first AR-factor is required to be < seasonal period"; STOP;
  ENDIF;   
  IF (_q_ >= s) AND (_qs_ > 0); 
    PRINT "Order of first MA-factor is required to be < seasonal period"; STOP;
  ENDIF;        
  
  alpha = 0;
  phi = 0;
    
  
  IF _pnumb_ ; 
     alpha = ZEROS(_p_,1);    alpha[p_index]=alpha[p_index]+1; 
  ENDIF;
  IF _psnumb_ ; 
     phi = ZEROS(_ps_*s,1);   phi[ps_index*s]=phi[ps_index*s]+1; 
  ENDIF;
  ar_index = gesamt(alpha,phi)./=0;
  IF NOT ar_index == 0;
     _p_ = ROWS(ar_index);
     ar_index = SELIF(SEQA(1,1,_p_),ar_index);
  ENDIF;
  
  beta = 0;
  theta = 0;
 
  IF _qnumb_ ; 
     beta = ZEROS(_q_,1);     beta[q_index]=beta[q_index]+1; 
  ENDIF;
  IF _qsnumb_  > 0; 
     theta = ZEROS(_qs_*s,1); theta[qs_index*s]=theta[qs_index*s]+1;
  ENDIF;
  ma_index = gesamt(beta,theta)./=0;
  IF NOT ma_index == 0;
     _q_ = ROWS(ma_index);
     ma_index = SELIF(SEQA(1,1,_q_),ma_index);
  ENDIF;           
 
/* initial values */
 e = y;
 
 par=par0;
 
 IF par0 == 0;
   {par,stdpar,cov,e,sigma2}=armadhr(e,ar_index,ma_index);
         
    par1 = take(par,_pnumb_);
    IF _ps_;
      par1 = par1|take(RESHAPE(par,_psnumb_,_pnumb_+1)',-1)';
    ENDIF;
    par = TRIMR(par,ROWS(ar_index),0);
    par2 = take(par,_qnumb_);
    IF _qs_;
      par2 = par2|take(RESHAPE(par,_qsnumb_,_qnumb_+1)',-1)';
    ENDIF;
   par=par1|par2;
 ENDIF;

 {ll,par} = nelmead(&sarmallik,par);
 
 H = HESSP(&sarmallik,par);
 
  RETP(par,ll,H);
ENDP; 

 
PROC (1) = gesamt(a,b);
 LOCAL ges;
 IF a==0 AND b==0;
  ges = 0;
 ELSE; 
  ges = TRIMR(-POLYMULT(1|-a,1|-b),1,0);
  ges = TRIMR(ges,0,CUMSUMC(REV(ges).==0));
 ENDIF; 
 RETP(ges);
ENDP; 


