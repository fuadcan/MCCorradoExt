/*
** fcomparemt.src
** (C) Copyright 2004-2006 by Aptech Systems, Inc.
** All Rights Reserved.
**
** This Software Product is PROPRIETARY SOURCE CODE OF APTECH
** SYSTEMS, INC.    This File Header must accompany all files using
** any portion, in whole or in part, of this Source Code.   In
** addition, the right to create such files is strictly limited by
** Section 2.A. of the GAUSS Applications License Agreement
** accompanying this Software Product.
**
** If you wish to distribute any portion of the proprietary Source
** Code, in whole or in part, you must first obtain written
** permission from Aptech Systems.
**
**> feqmt, fnemt, fltmt, fgtmt, flemt, fgemt
**
**  Fuzzy comparison functions.  These functions use
**  fcmptol to fuzz the comparison operations to allow for
**  round off error.
**
**  The statement:      y = feqmt(a,b,fcmptol);
**
**  is equivalent to:   y = a eq b;
**
**  Return scalar result, 1 or 0
**
**      y = feqmt(a,b,fcmptol);
**      y = fnemt(a,b,fcmptol);
**      y = fltmt(a,b,fcmptol);
**      y = fgtmt(a,b,fcmptol);
**      y = flemt(a,b,fcmptol);
**      y = fgemt(a,b,fcmptol);
**
**  Return matrix result, 1's and 0's
**
**      y = dotfeqmt(a,b,fcmptol);
**      y = dotfnemt(a,b,fcmptol);
**      y = dotfltmt(a,b,fcmptol);
**      y = dotfgtmt(a,b,fcmptol);
**      y = dotflemt(a,b,fcmptol);
**      y = dotfgemt(a,b,fcmptol);
**
**
*/

proc feqmt(a,b,fcmptol);
    retp(abs(a-b) <= fcmptol);
endp;

proc dotfeqmt(a,b,fcmptol);
    retp(abs(a-b) .<= fcmptol);
endp;

proc fnemt(a,b,fcmptol);
    retp(abs(a-b) > fcmptol);
endp;

proc dotfnemt(a,b,fcmptol);
    retp(abs(a-b) .> fcmptol);
endp;

proc fltmt(a,b,fcmptol);
    retp((a < (b - fcmptol)));
endp;

proc dotfltmt(a,b,fcmptol);
    retp((a .< (b - fcmptol)));
endp;

proc fgtmt(a,b,fcmptol);
    retp((a > (b + fcmptol)));
endp;

proc dotfgtmt(a,b,fcmptol);
    retp((a .> (b + fcmptol)));
endp;

proc flemt(a,b,fcmptol);
    retp((a <= (b + fcmptol)));
endp;

proc dotflemt(a,b,fcmptol);
    retp((a .<= (b + fcmptol)));
endp;

proc fgemt(a,b,fcmptol);
    retp((a >= (b - fcmptol)));
endp;

proc dotfgemt(a,b,fcmptol);
    retp((a .>= (b - fcmptol)));
endp;
