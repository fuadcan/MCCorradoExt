DECLARE _filter != 0 ;
DECLARE _aband != 0 ;
KEYWORD ActScr(x);
#IFUNIX;
   if WinGetActive NE 0;
      Call WinSetActive(1);
   endif;
#ENDIF;
   retp;
endp;
KEYWORD ActWin(x);
#IFUNIX;
   If WinGetActive NE 0;
      Call WinSetActive(1);
   Endif;
#ENDIF;
   retp;
endp;
KEYWORD CWait(x);
   ActScr(x);
   #IFUNIX;
      "Please press any key to continue...";
   #ENDIF;
   wait;
   retp;
endp;
proc MakeWin(x);
   local cpw, cPQG;
   cpw = 2;
#IFUNIX;
   If WinGetActive NE 0 ;
      let cPQG = 300 180 310 230 0 0 1 6 15 0 1 0 2;
      cpw   = WinOpenPQG(cPQG,"COINT 2.0",x);
      if cpw > 0 ;
     call WinSetActive (cpw);
      endif;
   else;
      cpw = -1;
   endif;
#ENDIF;
retp(cpw);
endp;
KEYWORD CPause(x);
   #IFUNIX;
      ActScr(0);
      x " Press any key to go on...";
      wait;
   #ENDIF;
   retp;
endp;
proc lagn(x,n);
    local y;
    y = shiftr(x', n, (miss(0, 0))');
    retp(y');
endp;
proc kacf(e,v) ;
     local eb, ef, ae, ee, se, ad, a1, a2, nobs;
     if VARGET("_aband") EQ 1;
     eb = trimr(lagn(e,1),1,0) ;
         ef = trimr(e,1,0);
         ae = sumc(eb.*ef)./sumc(eb.^2);
         ee = ef - eb.*(ae');
         se = meanc(ee.^2);
         ad = sumc((se./((1-ae).^2)).^2);
         a1 = 4*sumc((ae.*se./(((1-ae).^3).*(1+ae))).^2)/ad;
         a2 = 4*sumc((ae.*se./((1-ae).^4)).^2)/ad;
         nobs = rows(e) ;
         if VARGET("_ker_fun") == &qs ;
             v = 1.3221*((a2*nobs)^.2)-1;
         elseif VARGET("_ker_fun") == &parzen;
             v = 2.6614*((a2*nobs)^.2)-1;
         elseif VARGET("_ker_fun") == &fejer ;
             v = 1.1447*((a1*nobs)^.333)-1;
         elseif VARGET("_ker_fun") == &tukham ;
             v = 1.7462*((a2*nobs)^.2)-1;
         endif ;
     endif ;
retp(kernel(e,v));
endp ;
proc (2) = xahat(e) ;
     local a, t1, t2, r ;
     t1 = trimr(e,1,0) ;
     t2 = trimr(lagn(e,1),1,0);
     a  = inv(t2't2)*(t2't1);
     r  = t1 - (t2*a);
retp(a,r);
endp ;
proc lrvar(e,v) ;
     local lr, io, s, a, new_e, tmp ;
     if (VARGET("_filter") EQ 1) ;
      {a,new_e} = xahat(e) ;
          tmp = inv(eye(cols(e)) - a) ;
          io = kacf(new_e,v) ;
          s  = (new_e'new_e)/rows(new_e) ;
          lr = tmp'(s + io + (io'))*tmp;
     else ;
          io = kacf(e,v) ;
          s  = (e'e)/rows(e);
          lr = s + io + (io');
     endif ;
retp(lr);
endp;
proc delta(e,v) ;
     local io, a, new_e, lr, tmp, s, su ;
     if (VARGET("_filter") EQ 1) ;
      {a,new_e} = xahat(e) ;
          tmp = inv(eye(cols(e)) - a);
          io = kacf(new_e,v) ;
          s  = (new_e'new_e)/rows(new_e) ;
          su = (e'e)/(rows(e)) ;
          lr = su + tmp'io*tmp + (tmp'(a')*su);
     else ;
          io = kacf(e,v);
          lr = ((e'e)/rows(e)) + (io);
     endif;
retp(lr');
endp ;
proc covarf(e,v) ;
     retp(delta(e,v)-((e'e)/rows(e)));
endp;
proc lcminv(xr,xi) ;
     local ixy, zr, zi ;
     ixy = inv(xr)*xi ;
     zr  = inv(xr+(xi*ixy)) ;
     zi  = -ixy*zr ;
retp(zr~zi) ;
endp ;
proc lcmmult(xr,xi,yr,yi) ;
     local zr, zi;
     zr = (xr*yr) - xi*yi;
     zi = (xr*yi) + xi*yr;
retp(zr~zi) ;
endp ;
proc prepvec(realx,imagx,sfreq,k) ;
     local a,b,z,nobs,aa,bb;
     nobs = rows(real);
     if (sfreq == 0);
         a = realx[1:k+1,.];
         b = imagx[1:k+1,.];
         z = reorg(a,b);
     else;
        aa = realx[nobs-k+1:nobs,.]|realx|realx[1:k,.];
        bb = imagx[nobs-k+1:nobs,.]|imagx|imagx[1:k,.];
         a = aa[(sfreq+1):(sfreq+2*k+1),.];
         b = bb[(sfreq+1):(sfreq+2*k+1),.];
         z = a~b ;
     endif;
retp(z);
endp ;
proc nt(y);
     local m, n;
     m = 1;
     n = rows(y);
     do until (2^m >= n);
        m = m+1;
     endo;
retp(2^m);
endp;
proc cbeta(p1,p2) ;
     local temp, cdt, p1r, p1i, p2r, p2i, tr ;
     cdt  = cols(p1)/2 ;
     p1r  = p1[.,1:cdt] ;
     p1i  = p1[.,(cdt+1):2*cdt] ;

     cdt  = cols(p2)/2 ;
     p2r  = p2[.,1:cdt] ;
     p2i  = p2[.,(cdt+1):2*cdt] ;

     p2r  = p2r[.,1] ;
     p2i  = p2i[.,1] ;

retp(lcmmult(p1r,p1i,p2r,p2i)) ;
endp ;
proc reorga(realx,imagx);
     local x, y ;
     x  =  realx|-realx[1,.]|trimr(rev(realx),0,1) ;
     y  =  imagx|-imagx[1,.]|trimr(rev(-imagx),0,1) ;
     retp(x~y);
endp ;
proc reorg(realx,imagx);
     local temp, n ;
     n = rows(real) ;
     temp = (rev(realx[2:n,.])|realx[1:n,.])~(-rev(imagx[2:n,.])|imagx[1:n,.]) ;
retp(temp);
endp ;
proc sfft(x) ;
     local row_dim, col_dim, a, i, temp, scale, k;
     local z_real, z_imag, b, t, j, z, rdx, cdx, tr, ti;

     rdx     = rows(x);
     cdx     = cols(x);
   {tr, ti}  = fft(x[.,1]);
     scale   = sqrt(rows(tr)/(2*pi));
     z_real  = tr*scale;
     z_imag  = ti*scale;

     i = 1;
     do while i < cdx;
        i = i+1;
        {tr, ti} = fft(x[.,i]);
        z_real = z_real~(tr*scale);
        z_imag = z_imag~(ti*scale);
     endo;

retp(z_real~z_imag) ;
endp ;
proc spect(z_real,z_imag,sfreq,k) ;
     local z, a, b, cdx ;
     cdx = cols(z_real) ;
     z   = prepvec(z_real,z_imag,sfreq,k) ;
     a   = z[.,1:cdx];
     b   = z[.,cdx+1:2*cdx];
     z   = lcmmult(a',b',a,-b) ;
     retp(z/rows(a));
endp;
proc invxpx(xreal,ximag);
     local xpx, inv_xpx, xpx_real, xpx_imag,cdt;
     xpx       = lcmmult(xreal',ximag',xreal,-ximag) ;
     cdt       = cols(xpx)/2 ;
     xpx_real  = xpx[.,1:cdt] ;
     xpx_imag  = xpx[.,(cdt+1):2*cdt] ;
retp(lcminv(xpx_real,xpx_imag));
endp ;
proc give(x,z,y);
     local p1, p2;

     p1   = inv((x'z)*inv(z'z)*(z'x)) ;
     p2   = (x'z)*inv(z'z)*(z'y);

retp(p1*p2) ;
endp ;
proc gvcov(xreal,ximag,zreal,zimag);
     local cdt, zpz, zpx, tmp, p1, p2 ;
     local zpzr, zpzi, zpxr, zpxi, tmpr, tmpi, p1r, p1i, p2r, p2i ;
     local inv_zpz, inv_zpzr, inv_zpzi;
     local zpy, zpyr, zpyi ;

     zpz  = invxpx(zreal,zimag) ;
     cdt  = cols(zpz)/2 ;
inv_zpzr  = zpz[.,1:cdt] ;
inv_zpzi  = zpz[.,(cdt+1):2*cdt] ;

     zpx  = lcmmult(zreal',zimag',xreal,-ximag) ;
     cdt  = cols(zpx)/2 ;
    zpxr  = zpx[.,1:cdt] ;
    zpxi  = zpx[.,(cdt+1):2*cdt] ;

     tmp  = lcmmult(zpxr',zpxi',inv_zpzr,inv_zpzi) ;
     cdt  = cols(tmp)/2 ;
     tmpr = tmp[.,1:cdt] ;
     tmpi = tmp[.,(cdt+1):2*cdt] ;

     p1   = lcmmult(tmpr,tmpi,zpxr,zpxi);
     cdt  = cols(p1)/2 ;
     p1r  = p1[.,1:cdt] ;
     p1i  = p1[.,(cdt+1):2*cdt] ;

retp(lcminv(p1r,p1i));
endp ;
proc makep1(e_spr,e_spi,xreal,ximag) ;
     local temp, f22r, f22i ;
     local cdt, xpxr,xpxi,ixpxr,ixpxi ;

     temp = lcmmult(xreal',ximag',xreal,-ximag) ;
     cdt  = cols(temp)/2 ;
     f22r = temp[.,1:cdt] ;
     f22i = temp[.,(cdt+1):2*cdt] ;

retp(lcmmult(e_spr,e_spi,f22r',f22i')) ;
endp ;
proc fxx(data,k) ;
     local fdr, fdi, tr, ti, x, xi, spt, st, sb, nobs, i  ;
     local trr, tri, temp, cdt ;
     temp  = sfft(data) ;
     cdt   = cols(temp)/2 ;
     fdr   = temp[.,1:cdt];
     fdi   = temp[.,cdt+1:2*cdt];
     nobs  = rows(fdi) ;
     spt   = zeros(nobs,2*(cols(data)^2)) ;
     tr    = fdr[1:k,.] ;  ti = fdi[1:k,.] ;
     trr   = fdr[nobs-k+1:nobs,.] ; tri = fdi[nobs-k+1:nobs,.] ;
     fdr   = (rotater(fdr',k)')|trr|tr ;
     fdi   = (rotater(fdi',k)')|tri|ti ;
     i     = 0 ;
     do until (i == nobs) ;
        x   = fdr[i+1:i+1+(2*k),.] ;
        xi  = fdi[i+1:i+1+(2*k),.] ;
        spt[i+1,.] = vec(lcmmult(x',xi',x,-xi)/rows(x))' ;
        i = i + 1 ;
     endo ;
retp(spt) ;
endp ;
proc rsum(y,x,beta) ;
     local resid ;
     resid = y - x*beta ;
retp(resid'resid) ;
endp ;
proc regr(y,x);
      retp(y/x);
endp;
proc omega(x,k) ;
     local sigma, xxx ;
     xxx  =  parzen(x,k) ;
     sigma = (x'x/rows(x)) + xxx + xxx' ;
retp(sigma) ;
endp ;
proc diff(x,k) ;
     if ( k == 0) ;
        retp(x) ;
     endif ;
     retp(trimr(x,k,0)-trimr(lagn(x,k),k,0)) ;
endp ;
proc detrend(data,p) ;
local t, u, m, timep, it, iit, xmat, invx, beta, resid, nobs ;
     if (p == -1) ;
         retp(data);
     endif ;
     nobs     = rows(data) ;
     u        = ones(nobs,1) ;
     if p > 0 ;
       timep    = zeros(nobs,p) ;
       t        = seqa(1,1,nobs)/nobs ;
       m        = 1 ;
       do while m <= p ;
          timep[.,m] = t^m ;
          m = m + 1 ;
       endo ;
       xmat     = u~timep ;
     else ;
       xmat = u ;
     endif ;
     invx     = inv(xmat'xmat) ;
     beta     = invx*(xmat'data)  ;
     resid    = data - xmat*beta  ;
retp(resid) ;
endp ;
proc ptrend(p,nobs) ;
local data, t, u, m, timep, it, iit, xmat, invx, beta, resid ;
     u        = ones(nobs,1) ;
     if p > 0 ;
       timep    = zeros(nobs,p) ;
       t        = seqa(1,1,nobs)/nobs ;
       m        = 1 ;
       do while m <= p ;
          timep[.,m] = t^m ;
          m = m + 1 ;
       endo ;
       xmat     = u~timep ;
     else ;
       xmat = u ;
     endif ;
retp(xmat) ;
endp ;
proc makep2(xreal,ximag,ystar_r,ystar_i,inv_fvv);
     local xpy, xpy_real, xpy_imag ;
     local cdt, xpx, xpxr, xpxi, temp, tr, ti ;
     local inv_xpxr, inv_xpxi ;
     local ifvv_r, ifvv_i, f22r, f22i;

     temp = lcmmult(xreal',ximag',ystar_r,-ystar_i) ;
     cdt  = cols(temp)/2 ;
     xpy_real  = temp[.,1:cdt] ;
     xpy_imag  = temp[.,cdt+1:(2*cdt)] ;

     cdt    = cols(inv_fvv)/2 ;
     ifvv_r = inv_fvv[.,1:cdt] ;
     ifvv_i = inv_fvv[.,cdt+1:(2*cdt)] ;

     temp   = lcmmult(xpy_real,xpy_imag,ifvv_r,ifvv_i) ;

     cdt    = cols(temp)/2 ;

     tr     = temp[.,1:cdt];
     ti     = temp[.,cdt+1:(2*cdt)] ;

     tr     = tr[.,1] ;
     ti     = ti[.,1] ;

retp(tr~ti) ;
endp ;
proc ifft(x) ;
     local row_dim, col_dim, a, i, temp, scale, k;
     local z_real, z_imag, b, t, j, z, rdx, cdx;

     rdx     = rows(x);
     cdx     = cols(x);
     x       = x/sqrt(rdx/(2*pi));
     z_real  = ffti(x[.,1],x[.,2]);
     i = 1;
     do while i < (cdx/2);
        i = i+1;
        z_real = z_real~ffti(x[.,(2*i)-1],x[.,2*i]) ;
     endo;
retp(z_real) ;
endp ;
proc eregr(xreal,ximag,yreal,yimag);
     local y, x, sf, ef, M, k;
     local i, x_fft, y_fft, temp, beta ;
     local nvars, nobs, rnobs, xpy, xpy_real, xpy_imag ;
     local cdt, xpx, xpx_real, xpx_imag ;
     local inv_xpx, inv_xpxr, inv_xpxi, var_beta ;
     local betai, betar, xpred, err, s, e, err_real, err_imag ;
     local e_spect ;

 inv_xpx  = invxpx(xreal,ximag) ;
     cdt  = cols(inv_xpx)/2 ;
inv_xpxr  = inv_xpx[.,1:cdt] ;
inv_xpxi  = inv_xpx[.,(cdt+1):2*cdt] ;

     xpy  = lcmmult(xreal',ximag',yreal,-yimag) ;
     cdt  = cols(xpy)/2 ;
xpy_real  = xpy[.,1:cdt] ;
xpy_imag  = xpy[.,(cdt+1):2*cdt] ;

retp(lcmmult(inv_xpxr,inv_xpxi,xpy_real,xpy_imag)) ;
endp ;
proc bregri(xreal,ximag,e_spr,e_spi,xrealt,ximagt,ystar_r,ystar_i,inv_fvv);
     local beta ;
     local xpy, xpy_real, xpy_imag ;
     local cdt, xpx, xpxr, xpxi, temp ;
     local inv_xpxr, inv_xpxi ;
     local ifvv_r, ifvv_i, tr, ti, f22r, f22i;

     temp = lcmmult(xreal',ximag',xreal,-ximag) ;
     cdt  = cols(temp)/2 ;
     f22r = temp[.,1:cdt] ;
     f22i = temp[.,(cdt+1):2*cdt] ;

     temp = lcmmult(e_spr,e_spi,f22r',f22i') ;
     cdt  = cols(temp)/2 ;
     xpxr = temp[.,1:cdt] ;
     xpxi = temp[.,(cdt+1):2*cdt] ;


     temp = lcminv(xpxr,xpxi) ;
     cdt  = cols(temp)/2 ;
     inv_xpxr = temp[.,1:cdt] ;
     inv_xpxi = temp[.,(cdt+1):2*cdt] ;

     temp = lcmmult(xrealt',ximagt',ystar_r,-ystar_i) ;
     cdt  = cols(temp)/2 ;
     xpy_real  = temp[.,1:cdt] ;
     xpy_imag  = temp[.,cdt+1:(2*cdt)] ;

     cdt    = cols(inv_fvv)/2 ;
     ifvv_r = inv_fvv[.,1:cdt] ;
     ifvv_i = inv_fvv[.,cdt+1:(2*cdt)] ;

     temp = lcmmult(xpy_real,xpy_imag,ifvv_r,ifvv_i) ;
     cdt  = cols(temp)/2 ;
     tr   = temp[.,1:cdt] ;
     ti   = temp[.,cdt+1:2*cdt] ;
     tr   = tr[.,1] ;
     ti   = ti[.,1] ;

     beta  = lcmmult(inv_xpxr,inv_xpxi,tr,ti);

retp(beta) ;
endp ;
